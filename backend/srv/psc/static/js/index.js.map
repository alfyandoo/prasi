{"version":3,"file":"static/js/index.js","sources":["/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/TreeItem/TreeItem.module.css","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/TreeItem/TreeItem.tsx","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/utilities.ts","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/TreeItem/SortableTreeItem.tsx","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Item/components/Action/Action.module.css","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Item/components/Action/Action.tsx","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Item/components/Handle/Handle.tsx","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Item/components/Remove/Remove.tsx","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Item/Item.module.css","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/Container/Container.module.css","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/components/List/List.module.css","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/keyboardCoordinates.ts","/Users/riz/Developer/data/code/a0170f25-a9d9-4646-a970-f1c2e5747971/vsc/frontend/ui/tree/internal/SortableTree.tsx"],"sourcesContent":["// extracted by css-extract-rspack-plugin\nexport default {\"Wrapper\":\"Wrapper-N6FM3J\",\"wrapper\":\"Wrapper-N6FM3J\",\"clone\":\"clone-HZzfti\",\"TreeItem\":\"TreeItem-zpjbAm\",\"treeItem\":\"TreeItem-zpjbAm\",\"ghost\":\"ghost-WKmema\",\"indicator\":\"indicator-xSkIwE\",\"Text\":\"Text-e0lY_w\",\"text\":\"Text-e0lY_w\",\"Count\":\"Count-WjmLFG\",\"count\":\"Count-WjmLFG\",\"disableInteraction\":\"disableInteraction-EX4qBl\",\"disableSelection\":\"disableSelection-_diwO4\",\"Collapse\":\"Collapse-EslrGg\",\"collapse\":\"Collapse-EslrGg\",\"collapsed\":\"collapsed-IcTEmx\"};","import classNames from \"classnames\";\nimport React, { forwardRef, HTMLAttributes } from \"react\";\n\nimport { Action, Handle, Remove } from \"../\";\nimport styles from \"./TreeItem.module.css\";\n\nexport interface Props extends Omit<HTMLAttributes<HTMLLIElement>, \"id\"> {\n  childCount?: number;\n  clone?: boolean;\n  collapsed?: boolean;\n  depth: number;\n  disableInteraction?: boolean;\n  disableSelection?: boolean;\n  ghost?: boolean;\n  handleProps?: any;\n  indicator?: boolean;\n  indentationWidth: number;\n  value: string | number;\n  onCollapse?(): void;\n  onRemove?(): void;\n  wrapperRef?(node: HTMLLIElement): void;\n}\n\nexport const TreeItem = forwardRef<HTMLDivElement, Props>(\n  (\n    {\n      childCount,\n      clone,\n      depth,\n      disableSelection,\n      disableInteraction,\n      ghost,\n      handleProps,\n      indentationWidth,\n      indicator,\n      collapsed,\n      onCollapse,\n      onRemove,\n      style,\n      value,\n      wrapperRef,\n      ...props\n    },\n    ref\n  ) => {\n    return (\n      <li\n        className={classNames(\n          styles.Wrapper,\n          clone && styles.clone,\n          ghost && styles.ghost,\n          indicator && styles.indicator,\n          disableSelection && styles.disableSelection,\n          disableInteraction && styles.disableInteraction\n        )}\n        ref={wrapperRef}\n        style={\n          {\n            \"--spacing\": `${indentationWidth * depth}px`,\n          } as React.CSSProperties\n        }\n        {...props}\n      >\n        <div className={styles.TreeItem} ref={ref} style={style}>\n          <Handle {...handleProps} />\n          {onCollapse && (\n            <Action\n              onClick={onCollapse}\n              className={classNames(\n                styles.Collapse,\n                collapsed && styles.collapsed\n              )}\n            >\n              {collapseIcon}\n            </Action>\n          )}\n          <span className={styles.Text}>{value}</span>\n          {!clone && onRemove && <Remove onClick={onRemove} />}\n          {clone && childCount && childCount > 1 ? (\n            <span className={styles.Count}>{childCount}</span>\n          ) : null}\n        </div>\n      </li>\n    );\n  }\n);\n\nconst collapseIcon = (\n  <svg width=\"10\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 70 41\">\n    <path d=\"M30.76 39.2402C31.885 40.3638 33.41 40.995 35 40.995C36.59 40.995 38.115 40.3638 39.24 39.2402L68.24 10.2402C69.2998 9.10284 69.8768 7.59846 69.8494 6.04406C69.822 4.48965 69.1923 3.00657 68.093 1.90726C66.9937 0.807959 65.5106 0.178263 63.9562 0.150837C62.4018 0.123411 60.8974 0.700397 59.76 1.76024L35 26.5102L10.24 1.76024C9.10259 0.700397 7.59822 0.123411 6.04381 0.150837C4.4894 0.178263 3.00632 0.807959 1.90702 1.90726C0.807714 3.00657 0.178019 4.48965 0.150593 6.04406C0.123167 7.59846 0.700153 9.10284 1.75999 10.2402L30.76 39.2402Z\" />\n  </svg>\n);\n","import type {UniqueIdentifier} from '@dnd-kit/core';\nimport {arrayMove} from '@dnd-kit/sortable';\n\nimport type {FlattenedItem, TreeItem, TreeItems} from './types';\n\nexport const iOS = /iPad|iPhone|iPod/.test(navigator.platform);\n\nfunction getDragDepth(offset: number, indentationWidth: number) {\n  return Math.round(offset / indentationWidth);\n}\n\nexport function getProjection(\n  items: FlattenedItem[],\n  activeId: UniqueIdentifier,\n  overId: UniqueIdentifier,\n  dragOffset: number,\n  indentationWidth: number\n) {\n  const overItemIndex = items.findIndex(({id}) => id === overId);\n  const activeItemIndex = items.findIndex(({id}) => id === activeId);\n  const activeItem = items[activeItemIndex];\n  const newItems = arrayMove(items, activeItemIndex, overItemIndex);\n  const previousItem = newItems[overItemIndex - 1];\n  const nextItem = newItems[overItemIndex + 1];\n  const dragDepth = getDragDepth(dragOffset, indentationWidth);\n  const projectedDepth = activeItem.depth + dragDepth;\n  const maxDepth = getMaxDepth({\n    previousItem,\n  });\n  const minDepth = getMinDepth({nextItem});\n  let depth = projectedDepth;\n\n  if (projectedDepth >= maxDepth) {\n    depth = maxDepth;\n  } else if (projectedDepth < minDepth) {\n    depth = minDepth;\n  }\n\n  return {depth, maxDepth, minDepth, parentId: getParentId()};\n\n  function getParentId() {\n    if (depth === 0 || !previousItem) {\n      return null;\n    }\n\n    if (depth === previousItem.depth) {\n      return previousItem.parentId;\n    }\n\n    if (depth > previousItem.depth) {\n      return previousItem.id;\n    }\n\n    const newParent = newItems\n      .slice(0, overItemIndex)\n      .reverse()\n      .find((item) => item.depth === depth)?.parentId;\n\n    return newParent ?? null;\n  }\n}\n\nfunction getMaxDepth({previousItem}: {previousItem: FlattenedItem}) {\n  if (previousItem) {\n    return previousItem.depth + 1;\n  }\n\n  return 0;\n}\n\nfunction getMinDepth({nextItem}: {nextItem: FlattenedItem}) {\n  if (nextItem) {\n    return nextItem.depth;\n  }\n\n  return 0;\n}\n\nfunction flatten(\n  items: TreeItems,\n  parentId: UniqueIdentifier | null = null,\n  depth = 0\n): FlattenedItem[] {\n  return items.reduce<FlattenedItem[]>((acc, item, index) => {\n    return [\n      ...acc,\n      {...item, parentId, depth, index},\n      ...flatten(item.children, item.id, depth + 1),\n    ];\n  }, []);\n}\n\nexport function flattenTree(items: TreeItems): FlattenedItem[] {\n  return flatten(items);\n}\n\nexport function buildTree(flattenedItems: FlattenedItem[]): TreeItems {\n  const root: TreeItem = {id: 'root', children: []};\n  const nodes: Record<string, TreeItem> = {[root.id]: root};\n  const items = flattenedItems.map((item) => ({...item, children: []}));\n\n  for (const item of items) {\n    const {id, children} = item;\n    const parentId = item.parentId ?? root.id;\n    const parent = nodes[parentId] ?? findItem(items, parentId);\n\n    nodes[id] = {id, children};\n    parent.children.push(item);\n  }\n\n  return root.children;\n}\n\nexport function findItem(items: TreeItem[], itemId: UniqueIdentifier) {\n  return items.find(({id}) => id === itemId);\n}\n\nexport function findItemDeep(\n  items: TreeItems,\n  itemId: UniqueIdentifier\n): TreeItem | undefined {\n  for (const item of items) {\n    const {id, children} = item;\n\n    if (id === itemId) {\n      return item;\n    }\n\n    if (children.length) {\n      const child = findItemDeep(children, itemId);\n\n      if (child) {\n        return child;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport function removeItem(items: TreeItems, id: UniqueIdentifier) {\n  const newItems = [];\n\n  for (const item of items) {\n    if (item.id === id) {\n      continue;\n    }\n\n    if (item.children.length) {\n      item.children = removeItem(item.children, id);\n    }\n\n    newItems.push(item);\n  }\n\n  return newItems;\n}\n\nexport function setProperty<T extends keyof TreeItem>(\n  items: TreeItems,\n  id: UniqueIdentifier,\n  property: T,\n  setter: (value: TreeItem[T]) => TreeItem[T]\n) {\n  for (const item of items) {\n    if (item.id === id) {\n      item[property] = setter(item[property]);\n      continue;\n    }\n\n    if (item.children.length) {\n      item.children = setProperty(item.children, id, property, setter);\n    }\n  }\n\n  return [...items];\n}\n\nfunction countChildren(items: TreeItem[], count = 0): number {\n  return items.reduce((acc, {children}) => {\n    if (children.length) {\n      return countChildren(children, acc + 1);\n    }\n\n    return acc + 1;\n  }, count);\n}\n\nexport function getChildCount(items: TreeItems, id: UniqueIdentifier) {\n  const item = findItemDeep(items, id);\n\n  return item ? countChildren(item.children) : 0;\n}\n\nexport function removeChildrenOf(\n  items: FlattenedItem[],\n  ids: UniqueIdentifier[]\n) {\n  const excludeParentIds = [...ids];\n\n  return items.filter((item) => {\n    if (item.parentId && excludeParentIds.includes(item.parentId)) {\n      if (item.children.length) {\n        excludeParentIds.push(item.id);\n      }\n      return false;\n    }\n\n    return true;\n  });\n}\n","import React, {CSSProperties} from 'react';\nimport type {UniqueIdentifier} from '@dnd-kit/core';\nimport {AnimateLayoutChanges, useSortable} from '@dnd-kit/sortable';\nimport {CSS} from '@dnd-kit/utilities';\n\nimport {TreeItem, Props as TreeItemProps} from './TreeItem';\nimport {iOS} from '../../utilities';\n\ninterface Props extends TreeItemProps {\n  id: UniqueIdentifier;\n}\n\nconst animateLayoutChanges: AnimateLayoutChanges = ({isSorting, wasDragging}) =>\n  isSorting || wasDragging ? false : true;\n\nexport function SortableTreeItem({id, depth, ...props}: Props) {\n  const {\n    attributes,\n    isDragging,\n    isSorting,\n    listeners,\n    setDraggableNodeRef,\n    setDroppableNodeRef,\n    transform,\n    transition,\n  } = useSortable({\n    id,\n    animateLayoutChanges,\n  });\n  const style: CSSProperties = {\n    transform: CSS.Translate.toString(transform),\n    transition,\n  };\n\n  return (\n    <TreeItem\n      ref={setDraggableNodeRef}\n      wrapperRef={setDroppableNodeRef}\n      style={style}\n      depth={depth}\n      ghost={isDragging}\n      disableSelection={iOS}\n      disableInteraction={isSorting}\n      handleProps={{\n        ...attributes,\n        ...listeners,\n      }}\n      {...props}\n    />\n  );\n}\n","// extracted by css-extract-rspack-plugin\nexport default {};","import React, {forwardRef, CSSProperties} from 'react';\nimport classNames from 'classnames';\n\nimport styles from './Action.module.css';\n\nexport interface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  active?: {\n    fill: string;\n    background: string;\n  };\n  cursor?: CSSProperties['cursor'];\n}\n\nexport const Action = forwardRef<HTMLButtonElement, Props>(\n  ({active, className, cursor, style, ...props}, ref) => {\n    return (\n      <button\n        ref={ref}\n        {...props}\n        className={classNames(styles.Action, className)}\n        tabIndex={0}\n        style={\n          {\n            ...style,\n            cursor,\n            '--fill': active?.fill,\n            '--background': active?.background,\n          } as CSSProperties\n        }\n      />\n    );\n  }\n);\n","import React, {forwardRef} from 'react';\n\nimport {Action, ActionProps} from '../Action';\n\nexport const Handle = forwardRef<HTMLButtonElement, ActionProps>(\n  (props, ref) => {\n    return (\n      <Action\n        ref={ref}\n        cursor=\"grab\"\n        data-cypress=\"draggable-handle\"\n        {...props}\n      >\n        <svg viewBox=\"0 0 20 20\" width=\"12\">\n          <path d=\"M7 2a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 2zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 8zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 7 14zm6-8a2 2 0 1 0-.001-4.001A2 2 0 0 0 13 6zm0 2a2 2 0 1 0 .001 4.001A2 2 0 0 0 13 8zm0 6a2 2 0 1 0 .001 4.001A2 2 0 0 0 13 14z\"></path>\n        </svg>\n      </Action>\n    );\n  }\n);\n","import React from 'react';\n\nimport {Action, ActionProps} from '../Action';\n\nexport function Remove(props: ActionProps) {\n  return (\n    <Action\n      {...props}\n      active={{\n        fill: 'rgba(255, 70, 70, 0.95)',\n        background: 'rgba(255, 70, 70, 0.1)',\n      }}\n    >\n      <svg width=\"8\" viewBox=\"0 0 22 22\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M2.99998 -0.000206962C2.7441 -0.000206962 2.48794 0.0972617 2.29294 0.292762L0.292945 2.29276C-0.0980552 2.68376 -0.0980552 3.31682 0.292945 3.70682L7.58591 10.9998L0.292945 18.2928C-0.0980552 18.6838 -0.0980552 19.3168 0.292945 19.7068L2.29294 21.7068C2.68394 22.0978 3.31701 22.0978 3.70701 21.7068L11 14.4139L18.2929 21.7068C18.6829 22.0978 19.317 22.0978 19.707 21.7068L21.707 19.7068C22.098 19.3158 22.098 18.6828 21.707 18.2928L14.414 10.9998L21.707 3.70682C22.098 3.31682 22.098 2.68276 21.707 2.29276L19.707 0.292762C19.316 -0.0982383 18.6829 -0.0982383 18.2929 0.292762L11 7.58573L3.70701 0.292762C3.51151 0.0972617 3.25585 -0.000206962 2.99998 -0.000206962Z\" />\n      </svg>\n    </Action>\n  );\n}\n","// extracted by css-extract-rspack-plugin\nexport default {\"Wrapper\":\"Wrapper-fC9ZhM\",\"wrapper\":\"Wrapper-fC9ZhM\",\"fadeIn\":\"fadeIn-n4AGUJ\",\"dragOverlay\":\"dragOverlay-K4bEFv\",\"Item\":\"Item-Z7F2aJ\",\"item\":\"Item-Z7F2aJ\",\"withHandle\":\"withHandle-UlyQfP\",\"dragging\":\"dragging-ascp4K\",\"disabled\":\"disabled-Omarsh\",\"pop\":\"pop-H1B1PA\",\"color\":\"color-RErYDV\",\"Remove\":\"Remove-gt84wz\",\"remove\":\"Remove-gt84wz\",\"Actions\":\"Actions-RTJGCZ\",\"actions\":\"Actions-RTJGCZ\"};","// extracted by css-extract-rspack-plugin\nexport default {\"Container\":\"Container-TDqFek\",\"container\":\"Container-TDqFek\",\"scrollable\":\"scrollable-MiGU0q\",\"placeholder\":\"placeholder-bMSKdB\",\"hover\":\"hover-NrWUpq\",\"unstyled\":\"unstyled-M54n7K\",\"horizontal\":\"horizontal-CMONm0\",\"shadow\":\"shadow-RLGJz0\",\"Header\":\"Header-cS0w6S\",\"header\":\"Header-cS0w6S\",\"Actions\":\"Actions-br8HvB\",\"actions\":\"Actions-br8HvB\"};","// extracted by css-extract-rspack-plugin\nexport default {\"List\":\"List-alLLwE\",\"list\":\"List-alLLwE\",\"horizontal\":\"horizontal-i6CHmo\"};","import {\n  closestCorners,\n  getFirstCollision,\n  KeyboardCode,\n  KeyboardCoordinateGetter,\n  DroppableContainer,\n} from '@dnd-kit/core';\n\nimport type {SensorContext} from './types';\nimport {getProjection} from './utilities';\n\nconst directions: string[] = [\n  KeyboardCode.Down,\n  KeyboardCode.Right,\n  KeyboardCode.Up,\n  KeyboardCode.Left,\n]; \n\nconst horizontal: string[] = [KeyboardCode.Left, KeyboardCode.Right];\n\nexport const sortableTreeKeyboardCoordinates: (\n  context: SensorContext,\n  indicator: boolean,\n  indentationWidth: number\n) => KeyboardCoordinateGetter = (context, indicator, indentationWidth) => (\n  event,\n  {\n    currentCoordinates,\n    context: {active, over, collisionRect, droppableRects, droppableContainers},\n  }\n) => {\n  if (directions.includes(event.code)) {\n    if (!active || !collisionRect) {\n      return;\n    }\n\n    event.preventDefault();\n\n    const {\n      current: {items, offset},\n    } = context;\n\n    if (horizontal.includes(event.code) && over?.id) {\n      const {depth, maxDepth, minDepth} = getProjection(\n        items,\n        active.id,\n        over.id,\n        offset,\n        indentationWidth\n      );\n\n      switch (event.code) {\n        case KeyboardCode.Left:\n          if (depth > minDepth) {\n            return {\n              ...currentCoordinates,\n              x: currentCoordinates.x - indentationWidth,\n            };\n          }\n          break;\n        case KeyboardCode.Right:\n          if (depth < maxDepth) {\n            return {\n              ...currentCoordinates,\n              x: currentCoordinates.x + indentationWidth,\n            };\n          }\n          break;\n      }\n\n      return undefined;\n    }\n\n    const containers: DroppableContainer[] = [];\n\n    droppableContainers.forEach((container) => {\n      if (container?.disabled || container.id === over?.id) {\n        return;\n      }\n\n      const rect = droppableRects.get(container.id);\n\n      if (!rect) {\n        return;\n      }\n\n      switch (event.code) {\n        case KeyboardCode.Down:\n          if (collisionRect.top < rect.top) {\n            containers.push(container);\n          }\n          break;\n        case KeyboardCode.Up:\n          if (collisionRect.top > rect.top) {\n            containers.push(container);\n          }\n          break;\n      }\n    });\n\n    const collisions = closestCorners({\n      active,\n      collisionRect,\n      pointerCoordinates: null,\n      droppableRects,\n      droppableContainers: containers,\n    });\n    let closestId = getFirstCollision(collisions, 'id');\n\n    if (closestId === over?.id && collisions.length > 1) {\n      closestId = collisions[1].id;\n    }\n\n    if (closestId && over?.id) {\n      const activeRect = droppableRects.get(active.id);\n      const newRect = droppableRects.get(closestId);\n      const newDroppable = droppableContainers.get(closestId);\n\n      if (activeRect && newRect && newDroppable) {\n        const newIndex = items.findIndex(({id}) => id === closestId);\n        const newItem = items[newIndex];\n        const activeIndex = items.findIndex(({id}) => id === active.id);\n        const activeItem = items[activeIndex];\n\n        if (newItem && activeItem) {\n          const {depth} = getProjection(\n            items,\n            active.id,\n            closestId,\n            (newItem.depth - activeItem.depth) * indentationWidth,\n            indentationWidth\n          );\n          const isBelow = newIndex > activeIndex;\n          const modifier = isBelow ? 1 : -1;\n          const offset = indicator\n            ? (collisionRect.height - activeRect.height) / 2\n            : 0;\n\n          const newCoordinates = {\n            x: newRect.left + depth * indentationWidth,\n            y: newRect.top + modifier * offset,\n          };\n\n          return newCoordinates;\n        }\n      }\n    }\n  }\n\n  return undefined;\n};\n","import {\n  Announcements,\n  DndContext,\n  DragEndEvent,\n  DragMoveEvent,\n  DragOverEvent,\n  DragOverlay,\n  DragStartEvent,\n  DropAnimation,\n  KeyboardSensor,\n  MeasuringStrategy,\n  Modifier,\n  PointerSensor,\n  UniqueIdentifier,\n  closestCenter,\n  defaultDropAnimation,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  arrayMove,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { SortableTreeItem } from \"./components\";\nimport { sortableTreeKeyboardCoordinates } from \"./keyboardCoordinates\";\nimport type { FlattenedItem, SensorContext, TreeItems } from \"./types\";\nimport {\n  buildTree,\n  flattenTree,\n  getChildCount,\n  getProjection,\n  removeChildrenOf,\n  removeItem,\n  setProperty,\n} from \"./utilities\";\n\nconst initialItems: TreeItems = [\n  {\n    id: \"Home\",\n    children: [],\n  },\n  {\n    id: \"Collections\",\n    children: [\n      { id: \"Spring\", children: [] },\n      { id: \"Summer\", children: [] },\n      { id: \"Fall\", children: [] },\n      { id: \"Winter\", children: [] },\n    ],\n  },\n  {\n    id: \"About Us\",\n    children: [],\n  },\n  {\n    id: \"My Account\",\n    children: [\n      { id: \"Addresses\", children: [] },\n      { id: \"Order History\", children: [] },\n    ],\n  },\n];\n\nconst measuring = {\n  droppable: {\n    strategy: MeasuringStrategy.Always,\n  },\n};\n\nconst dropAnimationConfig: DropAnimation = {\n  keyframes({ transform }) {\n    return [\n      { opacity: 1, transform: CSS.Transform.toString(transform.initial) },\n      {\n        opacity: 0,\n        transform: CSS.Transform.toString({\n          ...transform.final,\n          x: transform.final.x + 5,\n          y: transform.final.y + 5,\n        }),\n      },\n    ];\n  },\n  easing: \"ease-out\",\n  sideEffects({ active }) {\n    active.node.animate([{ opacity: 0 }, { opacity: 1 }], {\n      duration: defaultDropAnimation.duration,\n      easing: defaultDropAnimation.easing,\n    });\n  },\n};\n\ninterface Props {\n  collapsible?: boolean;\n  defaultItems?: TreeItems;\n  indentationWidth?: number;\n  indicator?: boolean;\n  removable?: boolean;\n}\n\nexport function SortableTree({\n  collapsible,\n  defaultItems = initialItems,\n  indicator = false,\n  indentationWidth = 50,\n  removable,\n}: Props) {\n  const [items, setItems] = useState(() => defaultItems);\n  const [activeId, setActiveId] = useState<UniqueIdentifier | null>(null);\n  const [overId, setOverId] = useState<UniqueIdentifier | null>(null);\n  const [offsetLeft, setOffsetLeft] = useState(0);\n  const [currentPosition, setCurrentPosition] = useState<{\n    parentId: UniqueIdentifier | null;\n    overId: UniqueIdentifier;\n  } | null>(null);\n\n  const flattenedItems = useMemo(() => {\n    const flattenedTree = flattenTree(items);\n    const collapsedItems = flattenedTree.reduce<(string | number)[]>(\n      (acc, { children, collapsed, id }) =>\n        collapsed && children.length ? [...acc, id] : acc,\n      []\n    );\n\n    return removeChildrenOf(\n      flattenedTree,\n      activeId != null ? [activeId, ...collapsedItems] : collapsedItems\n    );\n  }, [activeId, items]);\n  const projected =\n    activeId && overId\n      ? getProjection(\n          flattenedItems,\n          activeId,\n          overId,\n          offsetLeft,\n          indentationWidth\n        )\n      : null;\n  const sensorContext: SensorContext = useRef({\n    items: flattenedItems,\n    offset: offsetLeft,\n  });\n  const [coordinateGetter] = useState(() =>\n    sortableTreeKeyboardCoordinates(sensorContext, indicator, indentationWidth)\n  );\n  const sensors = useSensors(\n    useSensor(PointerSensor),\n    useSensor(KeyboardSensor, {\n      coordinateGetter,\n    })\n  );\n\n  const sortedIds = useMemo(\n    () => flattenedItems.map(({ id }) => id),\n    [flattenedItems]\n  );\n  const activeItem = activeId\n    ? flattenedItems.find(({ id }) => id === activeId)\n    : null;\n\n  useEffect(() => {\n    sensorContext.current = {\n      items: flattenedItems,\n      offset: offsetLeft,\n    };\n  }, [flattenedItems, offsetLeft]);\n\n  const announcements: Announcements = {\n    onDragStart({ active }) {\n      return `Picked up ${active.id}.`;\n    },\n    onDragMove({ active, over }) {\n      return getMovementAnnouncement(\"onDragMove\", active.id, over?.id);\n    },\n    onDragOver({ active, over }) {\n      return getMovementAnnouncement(\"onDragOver\", active.id, over?.id);\n    },\n    onDragEnd({ active, over }) {\n      return getMovementAnnouncement(\"onDragEnd\", active.id, over?.id);\n    },\n    onDragCancel({ active }) {\n      return `Moving was cancelled. ${active.id} was dropped in its original position.`;\n    },\n  };\n\n  return (\n    <DndContext\n      accessibility={{ announcements }}\n      sensors={sensors}\n      collisionDetection={closestCenter}\n      measuring={measuring}\n      onDragStart={handleDragStart}\n      onDragMove={handleDragMove}\n      onDragOver={handleDragOver}\n      onDragEnd={handleDragEnd}\n      onDragCancel={handleDragCancel}\n    >\n      <SortableContext items={sortedIds} strategy={verticalListSortingStrategy}>\n        {flattenedItems.map(({ id, children, collapsed, depth }) => (\n          <SortableTreeItem\n            key={id}\n            id={id}\n            value={id}\n            depth={id === activeId && projected ? projected.depth : depth}\n            indentationWidth={indentationWidth}\n            indicator={indicator}\n            collapsed={Boolean(collapsed && children.length)}\n            onCollapse={\n              collapsible && children.length\n                ? () => handleCollapse(id)\n                : undefined\n            }\n            onRemove={removable ? () => handleRemove(id) : undefined}\n          />\n        ))}\n        {createPortal(\n          <DragOverlay\n            dropAnimation={dropAnimationConfig}\n            modifiers={indicator ? [adjustTranslate] : undefined}\n          >\n            {activeId && activeItem ? (\n              <SortableTreeItem\n                id={activeId}\n                depth={activeItem.depth}\n                clone\n                childCount={getChildCount(items, activeId) + 1}\n                value={activeId.toString()}\n                indentationWidth={indentationWidth}\n              />\n            ) : null}\n          </DragOverlay>,\n          document.body\n        )}\n      </SortableContext>\n    </DndContext>\n  );\n\n  function handleDragStart({ active: { id: activeId } }: DragStartEvent) {\n    setActiveId(activeId);\n    setOverId(activeId);\n\n    const activeItem = flattenedItems.find(({ id }) => id === activeId);\n\n    if (activeItem) {\n      setCurrentPosition({\n        parentId: activeItem.parentId,\n        overId: activeId,\n      });\n    }\n\n    document.body.style.setProperty(\"cursor\", \"grabbing\");\n  }\n\n  function handleDragMove({ delta }: DragMoveEvent) {\n    setOffsetLeft(delta.x);\n  }\n\n  function handleDragOver({ over }: DragOverEvent) {\n    setOverId(over?.id ?? null);\n  }\n\n  function handleDragEnd({ active, over }: DragEndEvent) {\n    resetState();\n\n    if (projected && over) {\n      const { depth, parentId } = projected;\n      const clonedItems: FlattenedItem[] = JSON.parse(\n        JSON.stringify(flattenTree(items))\n      );\n      const overIndex = clonedItems.findIndex(({ id }) => id === over.id);\n      const activeIndex = clonedItems.findIndex(({ id }) => id === active.id);\n      const activeTreeItem = clonedItems[activeIndex];\n\n      clonedItems[activeIndex] = { ...activeTreeItem, depth, parentId };\n\n      const sortedItems = arrayMove(clonedItems, activeIndex, overIndex);\n      const newItems = buildTree(sortedItems);\n\n      setItems(newItems);\n    }\n  }\n\n  function handleDragCancel() {\n    resetState();\n  }\n\n  function resetState() {\n    setOverId(null);\n    setActiveId(null);\n    setOffsetLeft(0);\n    setCurrentPosition(null);\n\n    document.body.style.setProperty(\"cursor\", \"\");\n  }\n\n  function handleRemove(id: UniqueIdentifier) {\n    setItems((items) => removeItem(items, id));\n  }\n\n  function handleCollapse(id: UniqueIdentifier) {\n    setItems((items) =>\n      setProperty(items, id, \"collapsed\", (value) => {\n        return !value;\n      })\n    );\n  }\n\n  function getMovementAnnouncement(\n    eventName: string,\n    activeId: UniqueIdentifier,\n    overId?: UniqueIdentifier\n  ) {\n    if (overId && projected) {\n      if (eventName !== \"onDragEnd\") {\n        if (\n          currentPosition &&\n          projected.parentId === currentPosition.parentId &&\n          overId === currentPosition.overId\n        ) {\n          return;\n        } else {\n          setCurrentPosition({\n            parentId: projected.parentId,\n            overId,\n          });\n        }\n      }\n\n      const clonedItems: FlattenedItem[] = JSON.parse(\n        JSON.stringify(flattenTree(items))\n      );\n      const overIndex = clonedItems.findIndex(({ id }) => id === overId);\n      const activeIndex = clonedItems.findIndex(({ id }) => id === activeId);\n      const sortedItems = arrayMove(clonedItems, activeIndex, overIndex);\n\n      const previousItem = sortedItems[overIndex - 1];\n\n      let announcement;\n      const movedVerb = eventName === \"onDragEnd\" ? \"dropped\" : \"moved\";\n      const nestedVerb = eventName === \"onDragEnd\" ? \"dropped\" : \"nested\";\n\n      if (!previousItem) {\n        const nextItem = sortedItems[overIndex + 1];\n        announcement = `${activeId} was ${movedVerb} before ${nextItem.id}.`;\n      } else {\n        if (projected.depth > previousItem.depth) {\n          announcement = `${activeId} was ${nestedVerb} under ${previousItem.id}.`;\n        } else {\n          let previousSibling: FlattenedItem | undefined = previousItem;\n          while (previousSibling && projected.depth < previousSibling.depth) {\n            const parentId: UniqueIdentifier | null = previousSibling.parentId;\n            previousSibling = sortedItems.find(({ id }) => id === parentId);\n          }\n\n          if (previousSibling) {\n            announcement = `${activeId} was ${movedVerb} after ${previousSibling.id}.`;\n          }\n        }\n      }\n\n      return announcement;\n    }\n\n    return;\n  }\n}\n\nconst adjustTranslate: Modifier = ({ transform }) => {\n  return {\n    ...transform,\n    y: transform.y - 25,\n  };\n};\n"],"names":["TreeItem","forwardRef","ref","childCount","clone","depth","disableSelection","disableInteraction","ghost","handleProps","indentationWidth","indicator","collapsed","onCollapse","onRemove","style","value","wrapperRef","props","classNames","styles","Handle","Action","collapseIcon","Remove","iOS","navigator","getProjection","items","activeId","overId","dragOffset","overItemIndex","id","activeItemIndex","activeItem","newItems","arrayMove","previousItem","nextItem","dragDepth","Math","offset","projectedDepth","maxDepth","getMaxDepth","param","minDepth","getMinDepth","getParentId","_newItems_slice_reverse_find","newParent","item","flattenTree","flatten","parentId","acc","index","animateLayoutChanges","isSorting","wasDragging","SortableTreeItem","attributes","isDragging","listeners","setDraggableNodeRef","setDroppableNodeRef","transform","transition","useSortable","CSS","active","className","cursor","directions","KeyboardCode","horizontal","sortableTreeKeyboardCoordinates","context","event","currentCoordinates","over","collisionRect","droppableRects","droppableContainers","containers","container","rect","collisions","closestCorners","closestId","getFirstCollision","activeRect","newRect","newDroppable","newIndex","newItem","activeIndex","modifier","isBelow","initialItems","measuring","MeasuringStrategy","dropAnimationConfig","defaultDropAnimation","SortableTree","collapsible","defaultItems","removable","setItems","useState","setActiveId","setOverId","offsetLeft","setOffsetLeft","currentPosition","setCurrentPosition","flattenedItems","useMemo","flattenedTree","collapsedItems","children","removeChildrenOf","ids","excludeParentIds","projected","sensorContext","useRef","coordinateGetter","sensors","useSensors","useSensor","PointerSensor","KeyboardSensor","sortedIds","useEffect","DndContext","announcements","getMovementAnnouncement","closestCenter","document","delta","resetState","clonedItems","JSON","overIndex","activeTreeItem","buildTree","root","nodes","parent","findItem","itemId","SortableContext","verticalListSortingStrategy","Boolean","handleCollapse","setProperty","property","setter","undefined","handleRemove","removeItem","createPortal","DragOverlay","adjustTranslate","getChildCount","findItemDeep","child","countChildren","count","eventName","announcement","sortedItems","movedVerb","previousSibling"],"mappings":"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"}