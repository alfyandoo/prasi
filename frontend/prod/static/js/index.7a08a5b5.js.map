{"version":3,"file":"static/js/index.7a08a5b5.js","sources":["/Users/riz/Developer/prasi/frontend/src/utils/react/define-store.tsx","/Users/riz/Developer/prasi/frontend/src/utils/react/use-local.ts","/Users/riz/Developer/prasi/frontend/src/utils/ui/loading.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/root/prasi-window.ts","/Users/riz/Developer/prasi/frontend/src/nova/prod/loader/base.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/loader/route.tsx","/Users/riz/Developer/prasi/frontend/src/utils/types/general.ts","/Users/riz/Developer/prasi/frontend/src/base/load/proxy.ts","/Users/riz/Developer/prasi/frontend/src/base/load/api/api-proxy-def.tsx","/Users/riz/Developer/prasi/frontend/src/base/load/api/api-proxy.tsx","/Users/riz/Developer/prasi/frontend/src/base/load/db/db-proxy.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/loader/page.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/root/use-prod.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/react/router.tsx","/Users/riz/Developer/prasi/frontend/src/nova/prod/react/root.tsx","/Users/riz/Developer/prasi/backend/utils/src/wait-until.ts","/Users/riz/Developer/prasi/frontend/src/utils/react/define-window.ts","/Users/riz/Developer/prasi/frontend/src/utils/react/define-react.ts","/Users/riz/Developer/prasi/frontend/src/nova/prod/root/main.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useRef, useState } from \"react\";\nimport { proxy, Snapshot, useSnapshot } from \"valtio\";\n\nconst default_ctx = { ctx: {} as any, render() {} };\nconst store_ctx = createContext<{\n  ctx: Record<string, { ref: any; state: any }>;\n  render: () => void;\n}>(default_ctx);\n\nexport const StoreProvider = ({ children }: { children: any }) => {\n  const [_, render] = useState({});\n\n  return (\n    <store_ctx.Provider\n      value={{\n        ...default_ctx,\n        render() {\n          render({});\n        },\n      }}\n    >\n      {children}\n    </store_ctx.Provider>\n  );\n};\n\nexport const rawStore = function <T>(name: string) {\n  return () => default_ctx.ctx[name] as { state: any; ref: any };\n};\n\nexport const defineStore = function <\n  R,\n  T extends object,\n  K extends { [V in string]: (...arg: any[]) => void | boolean },\n  D,\n>(init: {\n  name: string;\n  state: T;\n  ref?: R;\n  action: (arg: {\n    ref: R;\n    state: T;\n    update: (fn: (state: T) => void) => void;\n  }) => K;\n  effect?: (arg: { state: Snapshot<T> }) => {\n    deps: any[];\n    effect: (arg: {\n      state: Snapshot<T>;\n      action: K;\n      update: (fn: (state: T) => void) => void;\n    }) => Promise<void>;\n    cleanup?: () => void;\n  }[];\n}) {\n  return <Z extends object>(\n    selector: (arg: { ref: R; state: Snapshot<T>; action: K }) => Z\n  ) => {\n    const internal = useRef({\n      mounted: true,\n    });\n\n    const store = useContext(store_ctx);\n    const ctx = store.ctx;\n    if (!ctx[init.name] && init.state) {\n      ctx[init.name] = { state: proxy(init.state), ref: init.ref || {} };\n    }\n\n    const state = useSnapshot<T>(ctx[init.name].state);\n    const ref = ctx[init.name].ref;\n\n    const selection = selector({\n      ref,\n      state,\n      action: createAction(\n        internal.current,\n        ref,\n        ctx[init.name].state,\n        init.action\n      ),\n    }) as Z & {\n      update: (fn: (state: T) => void) => void;\n    };\n    selection.update = (fn) => {\n      fn(ctx[init.name].state);\n    };\n\n    if (init.effect) {\n      const effects = init.effect({ state: ctx[init.name].state });\n\n      for (const e of effects) {\n        useEffect(() => {\n          internal.current.mounted = true;\n          e.effect({\n            action: createAction(\n              internal.current,\n              ref,\n              ctx[init.name].state,\n              init.action\n            ),\n            state,\n            update(fn) {\n              fn(ctx[init.name].state);\n            },\n          });\n          return () => {\n            internal.current.mounted = false;\n            if (e.cleanup) {\n              e.cleanup();\n            }\n          };\n        }, e.deps);\n      }\n    }\n\n    useEffect(() => {\n      internal.current.mounted = true;\n      return () => {\n        internal.current.mounted = false;\n      };\n    }, Object.values(selection));\n\n    return { ...selection };\n  };\n};\n\nconst createAction = (\n  cur: { mounted: boolean },\n  ref: any,\n  state: any,\n  action: (arg: {\n    state: any;\n    ref: any;\n    update: (fn: (state: any) => void) => void;\n  }) => any\n) => {\n  return new Proxy(\n    {},\n    {\n      get(target, p, receiver) {\n        return function (...arg: any[]) {\n          if (cur.mounted) {\n            const actions = action({\n              ref,\n              state,\n              update(fn) {\n                fn(state);\n              },\n            });\n            actions[p].bind(createAction(cur, ref, state, action))(...arg);\n          }\n        };\n      },\n    }\n  ) as any;\n};\n","import { useEffect, useRef, useState } from \"react\";\n\nexport const useLocal = <T extends object>(\n  data: T,\n  effect?: (arg: {\n    init: boolean;\n    setDelayedRender: (arg: boolean) => void;\n  }) => Promise<void | (() => void)> | void | (() => void),\n  deps?: any[]\n): {\n  [K in keyof T]: T[K] extends Promise<any> ? null | Awaited<T[K]> : T[K];\n} & { render: () => void } => {\n  const [, _render] = useState({});\n  const _ = useRef({\n    data: data as unknown as T & {\n      render: () => void;\n    },\n    deps: (deps || []) as any[],\n    ready: false,\n    _loading: {} as any,\n    lastRender: 0,\n    lastRenderCount: 0,\n    delayedRender: false,\n    delayedRenderTimeout: null as any,\n    overRenderTimeout: null as any,\n  });\n  const local = _.current;\n\n  useEffect(() => {\n    local.ready = true;\n    if (effect)\n      effect({\n        init: true,\n        setDelayedRender(arg) {\n          local.delayedRender = arg;\n        },\n      });\n  }, []);\n\n  if (local.ready === false) {\n    local._loading = {};\n\n    local.data.render = () => {\n      if (local.ready) {\n        if (local.delayedRender) {\n          if (Date.now() - local.lastRender > 100) {\n            local.lastRender = Date.now();\n            _render({});\n          } else {\n            clearTimeout(local.delayedRenderTimeout);\n            local.delayedRenderTimeout = setTimeout(local.data.render, 50);\n          }\n          return;\n        }\n\n        if (Date.now() - local.lastRender < 500) {\n          local.lastRenderCount++;\n        } else {\n          local.lastRenderCount = 0;\n        }\n\n        local.lastRender = Date.now();\n\n        if (local.lastRenderCount > 1000) {\n          clearTimeout(local.overRenderTimeout);\n          local.overRenderTimeout = setTimeout(() => {\n            local.lastRenderCount = 0;\n            local.lastRender = Date.now();\n            _render({});\n          }, 1000);\n\n          console.error(\n            `local.render executed ${local.lastRenderCount} times in less than 300ms`\n          );\n          return;\n        }\n\n        _render({});\n      }\n    };\n  } else {\n    if (local.deps.length > 0 && deps) {\n      for (const [k, dep] of Object.entries(deps) as any) {\n        if (local.deps[k] !== dep) {\n          local.deps[k] = dep;\n\n          if (effect) {\n            setTimeout(() => {\n              effect({\n                init: false,\n                setDelayedRender(arg) {\n                  local.delayedRender = arg;\n                },\n              });\n            });\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  return local.data as any;\n};\n","import { FC, ReactElement, ReactNode, useEffect } from \"react\";\nimport { useLocal } from \"../react/use-local\";\n\nconst w = window as unknown as {\n  loadingIcon: string;\n  ContentLoading?: FC<{ alt?: any; note?: any }>;\n};\n\nexport interface ISVGProps extends React.SVGProps<SVGSVGElement> {\n  size?: number;\n  className?: string;\n}\n\nexport const LoadingSpinner = ({\n  size = 24,\n  className,\n  ...props\n}: ISVGProps) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={size}\n      height={size}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      className={cx(\"animate-spin\", className)}\n    >\n      <path d=\"M21 12a9 9 0 1 1-6.219-8.56\" />\n    </svg>\n  );\n};\n\nexport const Loading: FC<{\n  children?: ReactNode;\n  className?: string;\n  show?: boolean;\n  backdrop?: boolean;\n  note?: ReactNode;\n  alt?: ReactElement;\n  pointer?: boolean;\n}> = ({ children, className, show, backdrop, note, alt, pointer }) => {\n  const local = useLocal(\n    {\n      icon: <div className=\"px-4 py-1\">Loading...</div>,\n      value: 0.111,\n      ival: null as any,\n    },\n    () => {}\n  );\n  useEffect(() => {\n    local.ival = setInterval(() => {\n      local.value += 0.1333;\n      if (local.value >= 1.3) {\n        local.value = 0;\n      }\n      local.render();\n    }, 200);\n    if (w.loadingIcon) {\n      local.icon = (\n        <img\n          alt=\"loading\"\n          src={w.loadingIcon}\n          className={css`\n            width: 42px;\n            height: 42px;\n          `}\n        />\n      );\n      local.render();\n    }\n    return () => {\n      clearInterval(local.ival);\n    };\n  }, []);\n\n  const CustomLoading = w.ContentLoading;\n\n  return (\n    <>\n      {backdrop !== false && (\n        <div\n          className={cx(\n            \"flex items-center z-40 bg-white pointer-events-none\",\n            \"w-full h-full fixed transition-all duration-1000\",\n            typeof show !== \"undefined\"\n              ? show\n                ? \"opacity-50\"\n                : \"opacity-0\"\n              : \"opacity-50\"\n          )}\n          onContextMenuCapture={(e) => {\n            e.preventDefault();\n          }}\n        ></div>\n      )}\n      {children ? (\n        <div\n          onContextMenuCapture={(e) => {\n            e.preventDefault();\n          }}\n          className={cx(\n            \"flex flex-1 items-center justify-center z-40 transition-all\",\n            className\n              ? className\n              : backdrop !== false\n                ? \"w-full h-full fixed\"\n                : \"\",\n            typeof show !== \"undefined\" ? (show ? \"\" : \"hidden\") : \"\"\n          )}\n        >\n          <div className=\"flex items-center justify-center flex-col space-y-3 bg-white p-4 rounded-lg select-none\">\n            <div className=\"text-sm\">{children}</div>\n          </div>\n        </div>\n      ) : (\n        <div\n          className={cx(\n            \"flex flex-1 items-center justify-center z-40  transition-all\",\n            pointer !== true && \"pointer-events-none\",\n            className\n              ? className\n              : backdrop !== false\n                ? \"w-full h-full fixed\"\n                : \"\",\n            typeof show !== \"undefined\" ? (show ? \"\" : \"hidden\") : \"\"\n          )}\n        >\n          {CustomLoading ? (\n            <CustomLoading alt={alt} note={note} />\n          ) : (\n            <div\n              className={cx(\n                \"w-1/6 flex flex-col items-center justify-center\",\n                css`\n                  min-width: 30px;\n                  .pr-outer {\n                    background: rgba(0, 0, 0, 0.1) !important;\n                  }\n                `\n              )}\n            >\n              <div className=\"text-[10px] text-slate-400 whitespace-nowrap\">\n                {note}\n              </div>\n\n              <div className=\"pr-outer w-full h-[3px] flex items-stretch rounded-sm overflow-hidden\">\n                <div\n                  className={cx(\n                    \"bg-blue-800 transition-all duration-200 rounded-sm w-full\",\n                    css`\n                      transform: translate(${-100 + local.value * 200}%);\n                    `\n                  )}\n                ></div>\n              </div>\n              {alt}\n            </div>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n","import { FC } from \"react\";\n\nexport const w = window as unknown as {\n  prasiContext: {\n    global: any;\n    render: () => void;\n  };\n  params: any;\n  navigateOverride: (href: string) => void;\n  pointerActive: boolean;\n  ContentLoading?: FC;\n  ContentNotFound?: FC;\n  _prasi: {\n    basepath: string;\n    site_id: string;\n    page_id?: string;\n    params?: any;\n    routed?: {\n      page_id?: string;\n      params?: any;\n    };\n  };\n};\n","import { w } from \"prod/root/prasi-window\";\n\nexport const base = {\n  root: null as unknown as URL,\n  url(...arg: any[]) {\n    const pathname = arg\n      .map((e) => (Array.isArray(e) ? e.join(\"\") : e))\n      .join(\"\");\n\n    let base_url = this.root.toString();\n    if (base_url.endsWith(\"/\"))\n      base_url = base_url.substring(0, base_url.length - 1);\n\n    if (pathname.startsWith(\"/\")) return base_url + pathname;\n    else {\n      return base_url + \"/\" + pathname;\n    }\n  },\n  get pathname() {\n    const res = location.pathname.substring(base.root.pathname.length);\n    if (!res.startsWith(\"/\")) return `/${res}`;\n    return res;\n  },\n};\n\nexport const initBaseConfig = () => {\n  if (!base.root) {\n    let url = new URL(location.href);\n    if (w._prasi.basepath) {\n      url.pathname = w._prasi.basepath;\n    }\n\n    base.root = new URL(`${url.protocol}//${url.host}${url.pathname}`);\n    if (base.root.pathname.endsWith(\"/\")) {\n      base.root.pathname = base.root.pathname.substring(\n        0,\n        base.root.length - 1\n      );\n    }\n  }\n};\n","import { apiProxy } from \"base/load/api/api-proxy\";\nimport { dbProxy } from \"base/load/db/db-proxy\";\nimport { createRouter } from \"radix3\";\nimport { base } from \"./base\";\nimport { EPage } from \"../../ed/logic/types\";\n\nconst cached = { route: null as any, promise: null as any };\n\nconst loadCachedRoute = () => {\n  if (cached.promise) return cached.promise;\n  cached.promise = new Promise<{\n    site: any;\n    urls: {\n      id: string;\n      url: string;\n    }[];\n    layout: any;\n  }>(async (done) => {\n    if (cached.route) done(cached.route);\n\n    const res = await fetch(base.url`_prasi/route`);\n    if (!res.headers.get(\"content-encoding\")) {\n      fetch(base.url`_prasi/compress/only-gz`);\n    }\n\n    cached.route = await res.json();\n    done(cached.route);\n  });\n  return cached.promise;\n};\n\nexport type PageRoute = {\n  id: string;\n  url: string;\n  root?: EPage[\"content_tree\"];\n  loading?: true;\n};\n\nexport const loadRouter = async () => {\n  const router = createRouter<{\n    id: string;\n    url: string;\n    content_tree?: EPage[\"content_tree\"];\n  }>();\n  const pages = [] as PageRoute[];\n  let site = {\n    id: \"\",\n    name: \"\",\n    domain: \"\",\n    responsive: \"all\",\n    api_url: \"\",\n  };\n  let layout = { id: \"\", root: null as null | EPage[\"content_tree\"] };\n  try {\n    const res = await loadCachedRoute();\n\n    if (res && res.site && res.urls) {\n      site = res.site;\n      layout = res.layout;\n\n      for (const item of res.urls) {\n        router.insert(item.url, item);\n        pages.push(item);\n      }\n    }\n  } catch (e) {}\n\n  return { router, pages, site, layout };\n};\n\nexport type ProdRouter = Awaited<ReturnType<typeof loadRouter>>;\n","import { PrismaClient } from \"prasi-db\";\n\nexport type PageProps = {\n  pathname: string;\n  domain: string;\n  params: any;\n};\n\nexport type PrasiAPI = {\n  apiEntry: any;\n  prismaTypes?: {\n    \"prisma.d.ts\": string;\n    \"runtime/library.d.ts\": string;\n    \"runtime/index.d.ts\": string;\n  };\n  apiTypes?: string;\n};\n\ndeclare global {\n  const _db: PrismaClient;\n}\nexport {};\n\nexport const w = window as unknown as {\n  isEditor: boolean;\n  isMobile: boolean;\n  basehost?: string;\n  basepath: string;\n  navigateOverride: (s: string) => string;\n  isDesktop: boolean;\n  prasiApi: Record<string, PrasiAPI>;\n  prasiContext: {\n    render: () => void;\n    renderEditor?: () => void;\n    afterEditorRender?: () => void;\n  };\n  loadedFonts: string[];\n  prasiApiDbPull: boolean;\n  mobile?: any;\n  params: any;\n  editorGlbDefault: string;\n  ts: number;\n  serverurl: string;\n  apiurl: string;\n  _api: any;\n  _db: any;\n  offline: boolean;\n  sync_too_long: boolean;\n  editorRender?: () => void;\n  debug: {\n    on: any;\n    off: any;\n  };\n  pointer_active: boolean;\n};\n","import axios from \"axios\";\n\n(BigInt.prototype as any).toJSON = function (): string {\n  return `BigInt::` + this.toString();\n};\nlet w = (typeof window !== \"undefined\" ? window : null) as any;\nlet g = (typeof global !== \"undefined\" ? global : undefined) as any;\n\nexport const fetchViaProxy = async (\n  target_url: string,\n  data?: any,\n  _headers?: any,\n  parse_json?: boolean\n) => {\n  const headers = { ..._headers };\n\n  let body = null as any;\n  let isFile = false;\n  let uploadProgress = null as any;\n\n  const files: File[] = [];\n  if (Array.isArray(data)) {\n    for (const item of data) {\n      if (item instanceof File) {\n        files.push(item);\n        isFile = true;\n      }\n      if (typeof item === \"function\") {\n        uploadProgress = item;\n      }\n    }\n  } else if (data instanceof File) {\n    isFile = true;\n    files.push(data);\n  }\n\n  if (!isFile) {\n    body = JSON.stringify(data);\n    headers[\"content-type\"] = \"aplication/json\";\n  } else {\n    const fd = new FormData();\n    for (const file of files) {\n      fd.append(file.name, file);\n    }\n    body = fd;\n    delete headers[\"content-type\"];\n    headers[\"enctype\"] = `multipart/form-data;`;\n  }\n\n  const to_url = new URL(target_url);\n\n  if (w !== null) {\n    const cur_url = new URL(location.href);\n    let final_url = \"\";\n\n    if (\n      // to_url.hostname === 'localhost' ||\n      to_url.host === cur_url.host ||\n      (!!g && typeof g.server_hook === \"function\")\n    ) {\n      final_url = to_url.toString();\n    } else {\n      final_url = `${cur_url.protocol}//${\n        cur_url.host\n      }/_proxy/${encodeURIComponent(to_url.toString())}`;\n    }\n\n    if (final_url) {\n      if (uploadProgress) {\n        const res = await axios({\n          method: data ? \"post\" : undefined,\n          url: final_url,\n          data: body,\n          onUploadProgress: uploadProgress,\n        });\n\n        return res.data;\n      } else {\n        const res = await fetch(\n          final_url,\n          data\n            ? {\n                method: \"POST\",\n                body,\n                headers,\n              }\n            : undefined\n        );\n        const raw = await res.text();\n        if (parse_json === false) return raw;\n\n        try {\n          return JSON.parse(raw, replacer);\n        } catch (e) {\n          return raw;\n        }\n      }\n    }\n  }\n\n  const res = await fetch(\n    to_url,\n    data\n      ? {\n          method: \"POST\",\n          body,\n          headers,\n        }\n      : undefined\n  );\n  const raw = await res.text();\n  try {\n    return JSON.parse(raw, replacer);\n  } catch (e) {\n    return raw;\n  }\n};\n\nconst replacer = (key: string, value: string) => {\n  if (typeof value === \"string\" && value.startsWith(\"BigInt::\")) {\n    return BigInt(value.substring(8));\n  }\n  return value;\n};\n\nexport const getProxyUrl = (target_url: string) => {\n  const to_url = new URL(target_url);\n\n  if (w !== null) {\n    const cur_url = new URL(location.href);\n    let final_url = \"\";\n\n    if (\n      // to_url.hostname === 'localhost' ||\n      to_url.host === cur_url.host ||\n      (!!g && typeof g.server_hook === \"function\")\n    ) {\n      final_url = to_url.toString();\n    } else {\n      final_url = `${cur_url.protocol}//${\n        cur_url.host\n      }/_proxy/${encodeURIComponent(to_url.toString())}`;\n    }\n    return final_url;\n  }\n  return to_url;\n};\n","import trim from \"lodash.trim\";\n\nexport const loadApiProxyDef = async (_url: string, with_types: boolean) => {\n  const url = trim(_url, \"/\");\n\n  await new Promise<void>((done) => {\n    const d = document;\n    const script = d.createElement(\"script\");\n    script.onload = async () => {\n      done();\n    };\n\n    if (!localStorage.getItem(\"api-ts-\" + url)) {\n      localStorage.setItem(\"api-ts-\" + url, Date.now().toString());\n    }\n\n    const url_target = new URL(url);\n    const url_cur = new URL(location.href);\n\n    url_cur.search = \"\";\n    url_cur.hash = \"\";\n    url_target.hash = \"\";\n    let is_remote = \"\";\n    if (url_target.host !== url_cur.host) {\n      is_remote = \"&remote=1\";\n    }\n\n    url_cur.pathname = \"\";\n    let cur_url = trim(url_cur.toString(), \"/\");\n    if (with_types) {\n      script.src = `${cur_url}/_prasi/load.js?url=${url}&v3&dev=1${is_remote}`;\n    } else {\n      script.src = `${cur_url}/_prasi/load.js?url=${url}&v3${is_remote}`;\n    }\n    script.onerror = () => {\n      done();\n    };\n\n    if (!document.querySelector(`script[src=\"${script.src}\"]`)) {\n      d.body.appendChild(script);\n    } else {\n      done();\n    }\n  });\n};\n\nconst baseUrl = (url: string) => {\n  const base = new URL(url);\n\n  return `${base.protocol}//${base.host}`;\n};\n\nconst urlPath = (url: string, pathname: string) => {\n  const base = new URL(url);\n  base.pathname = pathname;\n  return base.toString();\n};\n\nconst loadText = async (url: string, v2?: boolean) => {\n  const res = await fetch(url);\n  return await res.text();\n};\n","import { w } from \"../../../utils/types/general\";\nimport { fetchViaProxy } from \"../proxy\";\nimport { loadApiProxyDef } from \"./api-proxy-def\";\n\nexport type ApiProxy<T extends Record<string, any> = {}> = any;\n\nconst apiProxyLoaded: Record<string, Promise<void>> = {};\n\nexport const apiProxy = (api_url: string) => {\n  if (!w.prasiApi) {\n    w.prasiApi = {};\n  }\n\n  try {\n    const base = new URL(api_url);\n    let base_url = `${base.protocol}//${base.host}`;\n    if (!w.prasiApi[base_url]) {\n      if (!apiProxyLoaded[base_url]) {\n        apiProxyLoaded[base_url] = loadApiProxyDef(\n          base_url,\n          location.hostname.includes(\"prasi\")\n        );\n      }\n    }\n\n    return new Proxy(\n      {},\n      {\n        get: (_, actionName: string) => {\n          if (actionName === \"_url\") {\n            return (pathname: string, proxy?: boolean) => {\n              const to_url = new URL(base_url);\n              to_url.pathname = pathname\n                .split(\"/\")\n                .filter((e) => e)\n                .join(\"/\");\n\n              const cur_url = new URL(location.href);\n              let final_url = \"\";\n\n              if (to_url.host === cur_url.host || proxy === false) {\n                final_url = to_url.toString();\n              } else {\n                final_url = `${cur_url.protocol}//${\n                  cur_url.host\n                }/_proxy/${encodeURIComponent(to_url.toString())}`;\n              }\n              return final_url;\n            };\n          }\n\n          const createFn = (actionName: string) => {\n            return function (\n              this: { api_url: string } | undefined,\n              ...rest: any\n            ) {\n              return new Promise<any>(async (resolve, reject) => {\n                try {\n                  let api_ref = w.prasiApi[base_url];\n\n                  if (\n                    !api_ref &&\n                    apiProxyLoaded &&\n                    typeof apiProxyLoaded[base_url] === \"object\"\n                  ) {\n                    await apiProxyLoaded[base_url];\n                    api_ref = w.prasiApi[base_url];\n                  }\n\n                  if (api_ref) {\n                    if (Object.keys(api_ref).length === 0) {\n                      const url = `${base_url}/${actionName}`;\n\n                      const result = await fetchSendApi(url, rest);\n                      resolve(result);\n                      return;\n                    }\n\n                    if (actionName === \"_raw\") {\n                      const pathname = rest[0];\n                      const url = `${base_url}${pathname}`;\n\n                      const result = await fetchSendApi(url, rest.slice(1));\n                      resolve(result);\n                      return;\n                    }\n\n                    if (!api_ref.apiEntry) api_ref.apiEntry = {};\n                    if (api_ref.apiEntry && !api_ref.apiEntry[actionName]) {\n                      reject(\n                        `API ${actionName.toString()} not found, existing API: \\n   - ${Object.keys(\n                          api_ref.apiEntry || {}\n                        ).join(\"\\n   - \")}`\n                      );\n                      return;\n                    }\n\n                    let actionUrl = api_ref.apiEntry[actionName].url;\n                    const actionParams = api_ref.apiEntry[actionName].args;\n                    if (actionUrl && actionParams) {\n                      if (rest.length > 0 && actionParams.length > 0) {\n                        for (const [idx, p] of Object.entries(rest)) {\n                          const paramName = actionParams[parseInt(idx)];\n                          if (\n                            actionParams &&\n                            actionParams.includes(paramName)\n                          ) {\n                            if (\n                              !!p &&\n                              typeof p !== \"string\" &&\n                              typeof p !== \"number\"\n                            ) {\n                              continue;\n                            }\n                          }\n                          actionUrl = actionUrl.replace(\n                            `:${paramName}?`,\n                            p + \"\"\n                          );\n                          actionUrl = actionUrl.replace(\n                            `:${paramName}`,\n                            p + \"\"\n                          );\n                        }\n                      }\n\n                      const url = `${base_url}${actionUrl}`;\n\n                      const result = await fetchSendApi(url, rest);\n                      resolve(result);\n                    } else {\n                      console.error(`API Not Found: ${actionName.toString()}`);\n                    }\n                  } else {\n                    reject(\"Failed to load API [Proxy]: \" + base_url);\n                  }\n                } catch (e) {\n                  reject(e);\n                }\n              });\n            };\n          };\n          if (actionName === \"then\") {\n            return new Proxy(\n              {},\n              {\n                get: (_, actionName: string) => {\n                  return createFn(actionName);\n                },\n              }\n            );\n          }\n\n          return createFn(actionName);\n        },\n      }\n    );\n  } catch (e) {\n    return null;\n  }\n};\n\nconst fetchSendApi = async (url: string, params: any) => {\n  return await fetchViaProxy(url, params, {\n    \"content-type\": \"application/json\",\n  });\n};\n","import hash_sum from \"hash-sum\";\nimport { get, set } from \"idb-keyval\";\nimport { pack } from \"msgpackr\";\nimport pako, { gzip } from \"pako\";\nimport { fetchViaProxy, getProxyUrl } from \"../proxy\";\n\nconst schema_promise = {\n  tables: {} as Record<string, any>,\n  columns: {} as Record<string, any>,\n  rels: {} as Record<string, any>,\n};\n\nconst db_mode = {} as Record<string, \"msgpack\" | \"json\">;\n\nexport const dbProxy = (dburl: string) => {\n  const name = \"\";\n\n  if (!db_mode[dburl]) {\n    fetchSendDb(\n      {\n        table: \"check\",\n        action: \"check\",\n      },\n      dburl\n    ).then((res) => {\n      if (res && res.mode === \"encrypted\") {\n        db_mode[dburl] = \"msgpack\";\n      } else {\n        db_mode[dburl] = \"json\";\n      }\n    });\n  }\n\n  return new Proxy(\n    {},\n    {\n      get(_, table: string) {\n        if (table === \"_batch\") {\n          return {\n            update: async (batch: any) => {\n              return fetchSendDb(\n                {\n                  name,\n                  action: \"batch_update\",\n                  table: \"\",\n                  params: { batch },\n                },\n                dburl\n              );\n            },\n            upsert: async (arg: any) => {\n              return fetchSendDb(\n                {\n                  name,\n                  action: \"batch_upsert\",\n                  table: \"\",\n                  params: { arg },\n                },\n                dburl\n              );\n            },\n          };\n        }\n        if (table === \"_schema\") {\n          return {\n            tables: async () => {\n              if (!schema_promise.tables[dburl]) {\n                schema_promise.tables[dburl] = fetchSendDb(\n                  {\n                    name,\n                    action: \"schema_tables\",\n                    table: \"\",\n                    params: [],\n                  },\n                  dburl\n                );\n              }\n\n              return await schema_promise.tables[dburl];\n            },\n            columns: async (table: string) => {\n              if (!schema_promise.columns[dburl + \"_\" + table]) {\n                schema_promise.columns[dburl + \"_\" + table] = fetchSendDb(\n                  {\n                    name,\n                    action: \"schema_columns\",\n                    table,\n                    params: [],\n                  },\n                  dburl\n                );\n              }\n\n              return await schema_promise.columns[dburl + \"_\" + table];\n            },\n            rels: async (table: string) => {\n              if (!schema_promise.rels[dburl + \"_\" + table]) {\n                schema_promise.rels[dburl + \"_\" + table] = fetchSendDb(\n                  {\n                    name,\n                    action: \"schema_rels\",\n                    table,\n                    params: [],\n                  },\n                  dburl\n                );\n              }\n\n              return await schema_promise.rels[dburl + \"_\" + table];\n            },\n          };\n        }\n\n        if (table.startsWith(\"$\")) {\n          return (...params: any[]) => {\n            const bytes = pako.gzip(JSON.stringify(params));\n\n            return fetchSendDb(\n              {\n                name,\n                action: \"query\",\n                table,\n                params: btoa(\n                  bytes.reduce(\n                    (acc, current) => acc + String.fromCharCode(current),\n                    \"\"\n                  )\n                ),\n              },\n              dburl\n            );\n          };\n        }\n\n        return new Proxy(\n          {},\n          {\n            get(_, action: string) {\n              return async (...params: any[]) => {\n                if (table === \"query\") {\n                  table = action;\n                  action = \"query\";\n                }\n                return await fetchSendDb(\n                  {\n                    name,\n                    action,\n                    table,\n                    params,\n                  },\n                  dburl\n                );\n              };\n            },\n          }\n        );\n      },\n    }\n  );\n};\n\nconst editorQueryLoaded: Record<string, true> = {};\n\nexport const fetchSendDb = async (\n  _params: Record<string, any>,\n  dburl: string\n) => {\n  const base = new URL(dburl);\n  base.pathname = `/_dbs`;\n  const params = _params || {};\n\n  if (params.table) {\n    base.pathname += `/${params.table}`;\n  }\n  const url = base.toString();\n\n  if (typeof localStorage !== \"undefined\" && localStorage.mlsid) {\n    params.mlsid = localStorage.mlsid;\n  }\n\n  const hsum = hash_sum({ ...params, dburl });\n\n  let isEditor = false;\n  if (\n    typeof location !== \"undefined\" &&\n    base.hostname !== location.hostname &&\n    (window as any).isEditor &&\n    [\"prasi.avolut.com\", \"localhost:4550\", \"127.0.0.1:4550\"].includes(\n      location.host\n    )\n  )\n    isEditor = true;\n\n  const load = async () => {\n    let body: any = params;\n    let result = null;\n    if (db_mode[dburl] === \"msgpack\") {\n      body = gzip(pack(params), {});\n      const res = await fetch(getProxyUrl(url), { method: \"POST\", body });\n      result = await res.json();\n    } else {\n      result = await fetchViaProxy(\n        url,\n        body,\n        {\n          \"content-type\": \"application/json\",\n        },\n        false\n      );\n    }\n\n    try {\n      if (typeof result === \"string\") return JSON.parse(result);\n    } catch (e) {}\n    return result;\n  };\n\n  if (isEditor) {\n    let result = await get(`editor-db-cache-${hsum}`);\n    if (!result) {\n      result = await load();\n      editorQueryLoaded[hsum] = true;\n      set(`editor-db-cache-${hsum}`, result);\n    } else {\n      if (!editorQueryLoaded[hsum]) {\n        load().then((result) => {\n          set(`editor-db-cache-${hsum}`, result);\n        });\n        editorQueryLoaded[hsum] = true;\n      }\n    }\n\n    return result;\n  }\n\n  return await load();\n};\n","import { EPage } from \"../../ed/logic/types\";\nimport { base } from \"./base\";\n\nexport const loadPages = async (ids: string[]) => {\n  const result = {} as Record<string, EPage[\"content_tree\"]>;\n\n  const res = (await (\n    await fetch(base.url`_prasi/pages`, {\n      method: \"POST\",\n      body: JSON.stringify({ ids }),\n    })\n  ).json()) as {\n    id: string;\n    url: string;\n    root: EPage[\"content_tree\"];\n  }[];\n\n  for (const page of res) {\n    result[page.id] = page.root;\n  }\n\n  return result;\n};\n","import { loadRouter, ProdRouter, PageRoute } from \"prod/loader/route\";\nimport { defineStore, rawStore } from \"utils/react/define-store\";\nimport { apiProxy } from \"base/load/api/api-proxy\";\nimport { dbProxy } from \"base/load/db/db-proxy\";\nimport { EPage } from \"../../ed/logic/types\";\nimport { loadPages } from \"../loader/page\";\n\nexport const useProd = defineStore({\n  name: \"prod-store\",\n  ref: {\n    router: null as null | ProdRouter[\"router\"],\n    api: null as null | ReturnType<typeof apiProxy>,\n    db: null as null | ReturnType<typeof dbProxy>,\n    pages: [] as PageRoute[],\n  },\n  state: {\n    pathname: location.pathname,\n    page: null as null | PageRoute,\n    site: {\n      id: \"\",\n      name: \"\",\n      domain: \"\",\n      responsive: \"all\",\n      api_url: \"\",\n    },\n    layout: { id: \"\", root: null as null | EPage[\"content_tree\"] },\n    status: {\n      router: \"init\" as \"init\" | \"loading\" | \"ready\",\n      responsive: \"desktop\" as \"mobile\" | \"desktop\",\n    },\n  },\n  action: ({ state: s, update, ref: r }) => ({\n    initRouter() {\n      if (s.status.router === \"init\") {\n        s.status.router = \"loading\";\n        loadRouter().then(({ router, pages, site, layout }) => {\n          update((s) => {\n            s.site = site;\n            s.layout = layout;\n            r.router = router;\n            r.pages = pages;\n\n            if (site.api_url) {\n              r.api = apiProxy(site.api_url);\n              r.db = dbProxy(site.api_url);\n            }\n            s.status.router = \"ready\";\n          });\n        });\n      }\n    },\n    loadPage(page: PageRoute) {\n      if (s.page?.id !== page.id) {\n        s.page = page;\n      }\n\n      if (!page.root && !page.loading) {\n        page.loading = true;\n        loadPages([page.id]).then((result) => {\n          update((s) => {\n            const tree = result[page.id];\n            if (tree && s.page) {\n              s.page.root = tree;\n              delete s.page.loading;\n            }\n          });\n        });\n      }\n    },\n  }),\n});\n\nexport const rawProd = rawStore<typeof useProd>(\"prod-store\");\n","import { memo } from \"react\";\nimport { base } from \"../loader/base\";\nimport { useProd } from \"../root/use-prod\";\nimport { w } from \"../root/prasi-window\";\n\nexport const ProdRouter = memo(() => {\n  const { router, pages, page, loadPage, update, pathname } = useProd(\n    ({ ref, state, action }) => ({\n      pathname: state.pathname,\n      router: ref.router,\n      pages: ref.pages,\n      loadPage: action.loadPage,\n      page: state.page,\n    })\n  );\n\n  const found = router?.lookup(base.pathname);\n  const found_page = pages?.find((e) => e.id === found?.id);\n\n  if (found_page) {\n    if (found_page.id !== page?.id) {\n      loadPage(found_page);\n      return <></>;\n    } else {\n      return (\n        <>\n          <div\n            onClick={() => {\n              navigate(\"/moasfm\");\n            }}\n          >\n            {pathname}\n            MOmoko\n          </div>\n        </>\n      );\n    }\n  } else {\n    update((s) => {\n      s.page = null;\n    });\n  }\n\n  if (w.ContentNotFound) {\n    return <w.ContentNotFound />;\n  }\n  return <>NOT FOUND {pathname}</>;\n});\n","import { Loading } from \"../../../utils/ui/loading\";\nimport { base } from \"../loader/base\";\nimport { useProd } from \"../root/use-prod\";\nimport { ProdRouter } from \"./router\";\nexport const isPreview = () => {\n  return (\n    location.hostname.split(\".\").length === 4 ||\n    location.hostname === \"prasi.app\" ||\n    location.hostname === \"prasi.avolut.com\" ||\n    location.hostname.includes(\"ngrok\") ||\n    location.hostname === \"localhost\" ||\n    location.hostname === \"127.0.0.1\" ||\n    location.hostname === \"10.0.2.2\"\n  ); // android localhost\n};\n\nexport const PrasiRoot = () => {\n  const { status, init, responsive, page } = useProd(\n    ({ state: s, action: a }) => ({\n      status: s.status.router,\n      responsive: s.status.responsive,\n      page: s.page,\n      init: a.initRouter,\n    })\n  );\n  if (status === \"init\") init();\n\n  return (\n    <>\n      {status !== \"ready\" || (page && !page.root) ? (\n        <Loading />\n      ) : (\n        <div className=\"relative flex flex-1 items-center justify-center\">\n          <div\n            className={cx(\n              \"absolute flex flex-col items-stretch flex-1 bg-white main-content-preview\",\n              responsive === \"mobile\"\n                ? css`\n                    @media (min-width: 1280px) {\n                      border-left: 1px solid #ccc;\n                      border-right: 1px solid #ccc;\n                      width: 375px;\n                      top: 0px;\n                      overflow-x: hidden;\n                      overflow-y: auto;\n                      bottom: 0px;\n                    }\n                    @media (max-width: 1279px) {\n                      left: 0px;\n                      right: 0px;\n                      top: 0px;\n                      bottom: 0px;\n                      overflow-y: auto;\n                    }\n                  `\n                : \"inset-0 overflow-auto\",\n              css`\n                contain: content;\n              `\n            )}\n          >\n            <ProdRouter />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","export const waitUntil = (\n  condition: number | (() => any),\n  timeout?: number\n) => {\n  return new Promise<void>(async (resolve) => {\n    if (typeof condition === \"function\") {\n      let tout = null as any;\n      if (timeout) {\n        tout = setTimeout(resolve, timeout);\n      }\n      if (await condition()) {\n        clearTimeout(tout);\n        resolve();\n        return;\n      }\n      let count = 0;\n      const c = setInterval(async () => {\n        if (await condition()) {\n          if (tout) clearTimeout(tout);\n          clearInterval(c);\n          resolve();\n        }\n        if (count > 100) {\n          clearInterval(c);\n        }\n      }, 10);\n    } else if (typeof condition === \"number\") {\n      setTimeout(() => {\n        resolve();\n      }, condition);\n    }\n  });\n};\n","import { css, extractCss } from \"goober\";\nimport { waitUntil } from \"prasi-utils\";\n\nexport const defineWindow = async (awaitServerUrl = true) => {\n  let w = typeof window === \"object\" ? window : (globalThis as any);\n\n  if (awaitServerUrl) await waitUntil(() => w.__SRV_URL__);\n\n  w.prasiContext = {\n    global: {},\n    render() {},\n  };\n\n  const location = window[\"location\"];\n\n  const host =\n      0 === location.protocol.indexOf(\"http\") ? location.hostname : \"localhost\",\n    scheme =\n      \"https:\" != location.protocol || /localhost|127.0.0.1|0.0.0.0/.test(host)\n        ? \"http\"\n        : \"https\";\n\n  if (w.__SRV_URL__) {\n    w.serverurl = w.__SRV_URL__;\n    const serverURL = new URL(w.serverurl);\n    if (\n      serverURL.hostname === \"localhost\" ||\n      serverURL.hostname === \"127.0.0.1\"\n    ) {\n      serverURL.hostname = location.hostname;\n      serverURL.pathname = serverURL.pathname === \"/\" ? \"\" : serverURL.pathname;\n      w.serverurl = serverURL.toString();\n      if (w.serverurl.endsWith(\"/\")) {\n        w.serverurl = w.serverurl.substring(0, w.serverurl.length - 1);\n      }\n    }\n  }\n\n  const port = location.port;\n  w.baseurl = scheme + \"://\" + host + (port ? \":\" + port : \"\") + \"/\";\n  if (!w.basepath) {\n    w.basepath = \"/\";\n  }\n  w.css = css;\n  w.extractCss = extractCss;\n  w.pathname = location.pathname;\n\n  w.cx = (...classNames: any[]) => {\n    const result: string[] = [];\n\n    classNames\n      .filter((e) => {\n        if (e) {\n          if (typeof e === \"string\" && e.trim()) return true;\n          else return true;\n        }\n        return false;\n      })\n      .forEach((e) => {\n        if (Array.isArray(e)) {\n          for (const f of e) {\n            if (typeof f === \"string\" && f.trim()) {\n              result.push(f.trim());\n            }\n          }\n        } else result.push(e.trim());\n      });\n    return result.join(\" \");\n  };\n\n  w.navigate = (href: string) => {\n    let _href = href;\n\n    if (typeof w.navigateOverride === \"function\") {\n      _href = w.navigateOverride(href);\n      if (!_href) return null;\n    }\n\n    history.pushState({ prevUrl: window.location.href }, \"\", _href);\n    w.pathname = href;\n\n    if (w.prasiContext && w.prasiContext.render) {\n      w.prasiContext.render();\n    }\n  };\n\n  if (typeof window === \"object\") {\n    window.addEventListener(\"popstate\", () => {\n      const sw = navigator.serviceWorker.controller;\n      if (sw) {\n        sw.postMessage({\n          type: \"add-cache\",\n          url: location.href,\n        });\n      }\n      if (w.prasiContext.popState) {\n        w.prasiContext.popState();\n        return;\n      }\n\n      if (w.preventPopRender) {\n        w.preventPopRender = false;\n        return;\n      }\n      if (w.prasiContext && w.prasiContext.render) {\n        w.pathname = location.pathname;\n        w.prasiContext.render();\n      }\n    });\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport JSXDevRuntime from \"react/jsx-dev-runtime\";\nimport JSXRuntime from \"react/jsx-runtime\";\n\nexport const defineReact = () => {\n  const w = typeof window === \"object\" ? window : (globalThis as any);\n\n  w.React = React;\n  w.ReactDOM = ReactDOM;\n  w.JSXRuntime = JSXRuntime;\n  w.JSXDevRuntime = JSXDevRuntime;\n  w.Fragment = React.Fragment;\n};\n","import { createRoot } from \"react-dom/client\";\nimport \"../../../index.css\";\nimport { PrasiRoot, isPreview } from \"../react/root\";\nimport { defineWindow } from \"utils/react/define-window\";\nimport { defineReact } from \"utils/react/define-react\";\nimport { w } from \"./prasi-window\";\nimport { initBaseConfig } from \"prod/loader/base\";\nimport { StoreProvider } from \"../../../utils/react/define-store\";\nimport { StrictMode } from \"react\";\nimport { rawProd } from \"./use-prod\";\n\n(async () => {\n  import(\"./font\");\n  const div = document.getElementById(\"root\");\n  initBaseConfig();\n  if (div) {\n    await defineWindow(false);\n\n    let react = {\n      root: createRoot(div),\n    };\n    defineReact();\n\n    //#region prasi site internal (loading ui + not found)\n    try {\n      let internal_url = \"/_prasi/code/internal.js\";\n      let import_url = internal_url;\n      if (location.pathname.startsWith(\"/prod\")) {\n        const patharr = location.pathname.split(\"/\");\n        import_url = `/prod/${patharr[2]}${internal_url}`;\n      }\n      let prasi_internal = false as any;\n\n      try {\n        const import_await = new Function(`return import(\"${import_url}\")`);\n        prasi_internal = await import_await();\n      } catch (e) {\n        console.error(e);\n      }\n      if (typeof prasi_internal === \"object\") {\n        if (prasi_internal.Loading) w.ContentLoading = prasi_internal.Loading;\n        if (prasi_internal.NotFound)\n          w.ContentNotFound = prasi_internal.NotFound;\n      }\n    } catch (e) {}\n    //#endregion\n\n    w.navigateOverride = (_href: string) => {\n      if (_href && _href.startsWith(\"/\")) {\n        if (isPreview()) {\n          if (\n            location.pathname.startsWith(\"/prod\") &&\n            !_href.startsWith(\"/prod\")\n          ) {\n            const patharr = location.pathname.split(\"/\");\n            _href = `/prod/${patharr[2]}${_href}`;\n          }\n        }\n      }\n      console.log(_href)\n      return _href;\n    };\n\n    w.prasiContext.render = () => {\n      rawProd().state.pathname = location.pathname;\n    };\n\n    react.root.render(\n      <StrictMode>\n        <StoreProvider>\n          <PrasiRoot />\n        </StoreProvider>\n      </StrictMode>\n    );\n    if (document.body.classList.contains(\"opacity-0\")) {\n      document.body.classList.remove(\"opacity-0\");\n    }\n  }\n})();\n"],"names":["init","useLocal","data","effect","deps","_render","useState","local","_","useRef","useEffect","arg","Date","clearTimeout","setTimeout","console","k","dep","Object","w","window","Loading","children","className","show","backdrop","note","alt","pointer","setInterval","css","clearInterval","CustomLoading","cx","e","base","_key","cached","loadCachedRoute","Promise","done","res","fetch","loadRouter","router","createRouter","pages","site","layout","item","default_ctx","store_ctx","createContext","StoreProvider","render","createAction","cur","ref","state","action","Proxy","target","p","receiver","BigInt","g","global","undefined","fetchViaProxy","target_url","_headers","parse_json","headers","body","isFile","uploadProgress","files","Array","File","fd","FormData","file","JSON","to_url","URL","cur_url","location","final_url","encodeURIComponent","axios","raw","replacer","key","value","getProxyUrl","loadApiProxyDef","_url","with_types","url","trim","d","document","script","localStorage","url_target","url_cur","is_remote","apiProxyLoaded","apiProxy","api_url","base_url","actionName","pathname","proxy","createFn","schema_promise","db_mode","dbProxy","dburl","fetchSendDb","table","batch","name","params","bytes","pako","btoa","acc","current","String","editorQueryLoaded","_params","hsum","hash_sum","isEditor","loadPages","ids","result","useProd","s","update","r","page","_s_page","tree","selector","internal","ctx","store","useContext","useSnapshot","selection","fn","rawProd","ProdRouter","memo","loadPage","found","found_page","navigate","isPreview","PrasiRoot","status","responsive","a","waitUntil","condition","timeout","resolve","tout","c","defineWindow","awaitServerUrl","globalThis","host","scheme","serverURL","port","extractCss","classNames","f","href","_href","history","sw","navigator","defineReact","React","ReactDOM","JSXRuntime","JSXDevRuntime","div","initBaseConfig","react","createRoot","internal_url","import_url","patharr","prasi_internal","import_await","Function","StrictMode"],"mappings":"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"}